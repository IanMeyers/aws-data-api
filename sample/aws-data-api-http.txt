export API_ENDPOINT=sdma0i6rek.execute-api.eu-west-1.amazonaws.com
export STAGE=dev

# get list of endpoints
http GET https://$API_ENDPOINT/$STAGE/data-apis

# get list of namespaces
http GET https://$API_ENDPOINT/$STAGE/namespaces

# gremlin console terminal session
ssh ec2-user@ip-10-0-12-230.eu-west-1.compute.internal -o "proxycommand ssh -W %h:%p -i /Users/meyersi/.credentials/ian-meyers ec2-user@ec2-34-245-211-148.eu-west-1.compute.amazonaws.com"
:remote connect tinkerpop.server conf/neptune-remote.yaml
:remote console

# provision a new instance of the API
http PUT https://$API_ENDPOINT/$STAGE/provision/Product PrimaryKey=asin TableIndexes=ProductName

# provision search integration
http PUT ElasticSearchDomain=data-lake FirehoseDeliveryIamRoleArn=arn:aws:iam::887210671223:role/firehose_delivery_role FailedIndexRecordBucket=meyersi-ire

http PUT https://$API_ENDPOINT/$STAGE/provision/MyItem GremlinAddress=aws-data-api-lineage.crpngd5qgxik.eu-west-1.neptune.amazonaws.com:8182

http PUT https://$API_ENDPOINT/$STAGE/MyItem/provision PrimaryKey=id TableIndexes=attr1

# check item exists
http HEAD https://$API_ENDPOINT/$STAGE/MyItem/123
http HEAD https://$API_ENDPOINT/$STAGE/Product/239847239874982374

# item that does not exist
http HEAD https://$API_ENDPOINT/$STAGE/MyItem/1232348239480

# get the item
http GET https://$API_ENDPOINT/$STAGE/MyItem/123
http GET https://$API_ENDPOINT/$STAGE/MyItem/123?Master=include
http GET https://$API_ENDPOINT/$STAGE/MyItem/123?Master=prefer
http GET https://$API_ENDPOINT/$STAGE/Product/239847239874982374

# get by ARN
http GET https://$API_ENDPOINT/$STAGE/MyItem/arn:aws:dapi:887210671223:MyItem-dev:123

# set the item master for item 123 to be record 321
http PUT https://$API_ENDPOINT/$STAGE/MyItem/ItemMaster id=123 ItemMasterID=14
http PUT https://$API_ENDPOINT/$STAGE/MyItem/ItemMaster id=456 ItemMasterID=14

# get item metadata
http GET https://$API_ENDPOINT/$STAGE/MyItem/123/meta
http GET https://$API_ENDPOINT/$STAGE/Product/239847239874982374

# put both resource and metadata
http PUT https://$API_ENDPOINT/$STAGE/MyItem Resource:=@/tmp/resource.json Metadata:=@/tmp/metadata.json
http PUT https://$API_ENDPOINT/$STAGE/Product/239847239874982374 Resource:=@~/Temp/product.json

# put resource body
http PUT https://$API_ENDPOINT/$STAGE/MyItem/45678 Resource:="){"attr1":"value1", "attr2":"value2","attr3":"value3","attr4":"value4"}")

# put resource body that can support strict occv
http PUT https://$API_ENDPOINT/$STAGE/MyItem/123 Resource:="){"attr1":"value1", "attr2":"value2","attr3":"value3","attr4":"value4"}")  ItemVersion:=2

# put resource body with conditions


# put references body
http PUT https://$API_ENDPOINT/$STAGE/MyItem/123 References:=")[{"Resource": "arn:aws:dapi:eu-west-1:887210671223:MyItem-dev:8888"}]")
http PUT https://$API_ENDPOINT/$STAGE/MyItem/123 References:=")[{"Resource": "arn:aws:dapi:eu-west-1:887210671223:MyItem-dev:8888", "MyReferenceAttr1": "value1", "MyReferenceAttr2": "value2"}]")

# put resource body without strict schema that will fail validation
http PUT https://$API_ENDPOINT/$STAGE/MyItem/123 Resource:="){"attr1":"value1","ShouldntBeHere":"1"}")

# put resource body with strict schema that will fail validation
http PUT https://$API_ENDPOINT/$STAGE/MyItem/123 Resource:="){"attr1":"value1","ShouldntBeHere":"1"}") StrictSchemaValidation=True

# put item metadata only
http PUT https://$API_ENDPOINT/$STAGE/MyItem/123 Metadata:="){"CostCenter":"9994"}")

# get api info
http get https://$API_ENDPOINT/$STAGE/MyItem/info

# put table metadata
http PUT https://$API_ENDPOINT/$STAGE/MyItem/info metadata1=abc metadata2=123 metadata3:="){"embedded1" : "value1", "embedded2" : "value2"}")

# delete the item
http DELETE https://$API_ENDPOINT/$STAGE/MyItem/345

# restore an item
http PUT https://$API_ENDPOINT/$STAGE/MyItem/9999/restore

# remove a resource attribute
http DELETE https://$API_ENDPOINT/$STAGE/MyItem/123 Resource:="["ShouldntBeHere"]"

# remove a metadata attribute
http DELETE https://$API_ENDPOINT/$STAGE/MyItem/123 Metadata:="["Flurgen"]"

# get endpoints
http GET https://$API_ENDPOINT/$STAGE/MyItem/endpoints

# get schema
http GET https://$API_ENDPOINT/$STAGE/MyItem/schema/resource

# write schema
http PUT https://$API_ENDPOINT/$STAGE/MyItem/schema/resource < ~/Temp/MyItem.schema.json

# scan resource request
http POST https://$API_ENDPOINT/$STAGE/MyItem/find Resource:="){"attr2":"value2-102"}")

# scan with limit
http POST https://$API_ENDPOINT/$STAGE/MyItem/find?limit=100 Resource:="){"attr2":"value2-102"}")

# consistent scan with limit
http POST https://$API_ENDPOINT/$STAGE/MyItem/find?limit=100&consistent=true Resource:="){"attr2":"value2-102"}")

# query metadata request
http POST https://$API_ENDPOINT/$STAGE/MyItem/find Metadata:="){"CostCenter":"7003"}")

# query for Item Master request
http POST https://$API_ENDPOINT/$STAGE/MyItem/find Resource:="){"ItemMasterID":"14"}")

# query with limit
http POST https://$API_ENDPOINT/$STAGE/MyItem/find?limit=10 Metadata:="){"CostCenter":"7003"}")

# query resource request
http POST https://$API_ENDPOINT/$STAGE/MyItem/find Resource:="){"attr1":"value1-102"}")

# get outbound lineage request
http GET https://$API_ENDPOINT/$STAGE/MyItem/123/downstream?search_depth=1

# get inbound lineage request
http GET https://$API_ENDPOINT/$STAGE/MyItem/123/upstream?search_depth=1


# list 10 items starting from a key
http GET https://$API_ENDPOINT/$STAGE/MyItem/list last_token==6176 page_size==10

# export the dataset to S3
http PUT https://$API_ENDPOINT/$STAGE/MyItem/export ExportJobDPU=5 ReadPct=100 S3ExportPath=s3://meyersi-ire/dapi/$STAGE/MyItem/ LogPath=s3://meyersi-ire/dapi/$STAGE/log/ SetupCrawler=true
http PUT https://$API_ENDPOINT/$STAGE/MyItem/export ExportJobDPU=5 ReadPct=100 S3ExportPath=s3://meyersi-ire/dapi/$STAGE/MyItem-Metadata/ LogPath=s3://meyersi-ire/dapi/$STAGE/log/ SetupCrawler=true ExportType=metadata
http PUT https://$API_ENDPOINT/$STAGE/MyItem/export ExportJobDPU=5 ReadPct=100 S3ExportPath=s3://meyersi-ire/dapi/$STAGE/MyItem/ LogPath=s3://meyersi-ire/dapi/$STAGE/log/ SetupCrawler=true ExportType=All

# get the status of an export
http GET https://$API_ENDPOINT/$STAGE/MyItem/export?JobName=dapi-MyItem-dev
http GET https://$API_ENDPOINT/$STAGE/MyItem/export?JobName=dapi-MyItem-dev&JobRunId=

# run the metadata extraction method
http PUT https://$API_ENDPOINT/$STAGE/GithubBills/s3://meyersi-ire/dapi/$STAGE/GithubBills/github-IanMeyers-receipt-2015-01-21.pdf/understand